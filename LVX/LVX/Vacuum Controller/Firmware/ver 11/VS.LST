MPASM

CCS PCW C Compiler, Version 2.548, 4813

               Filename: C:\MICROCH\VACSWTCH\VS.LST

               ROM used: 396 (39%)
                         396 (39%) including unused fragments
               RAM used: 8 (22%) at main() level
                         16 (44%) worst case
               Stack:    2 locations

0000 3000           00001 MOVLW  00
0001 008A           00002 MOVWF  0A
0002 297A           00003 GOTO   17A
0003 0000           00004 NOP
0004 0000           00005 NOP
0000                00006 ....................  /*    Vaccuum Switch Controller    							*/ 
0000                00007 .................... /*    Revision 1.0 5/5/98          							*/ 
0000                00008 .................... /*    Revision 1.1 6/3/98       In function 'mode' the led 
0000                00009 .................... will only light when it sees 6 complete transistions not 5  */ 
0000                00010 ....................   
0000                00011 ....................  
0000                00012 .................... #include <16C71.H> 
0000                00013 ....................  //////// Standard Header file for the PIC16C71 device //////// 
0000                00014 .................... #device PIC16C71 
0000                00095 .................... #list 
0000                00096 .................... 
0000                00097 ....................  
0000                00098 .................... 			//application specific definitions 
0000                00099 .................... #define min_vac 20 
0000                00100 .................... #define vac_solonoid PIN_B0		//input pc calling for vacuum 
0000                00101 .................... #define vacuum_sense PIN_B1		//output component confirmation to pc 
0000                00102 .................... #define vacuum_sol_drive PIN_B2		//output to turn vac sol on 
0000                00103 .................... #define vac_generator PIN_B6		//output to turn vac gen on 
0000                00104 ....................  
0000                00105 .................... 			//global definitions 
0000                00106 .................... int baseline,time; 
0000                00107 ....................  
0000                00108 ....................  
0000                00109 ....................  
0000                00110 .................... #fuses XT,NOPROTECT,NOWDT 
0000                00111 .................... #use DELAY(clock=4000000) 
0005 3019           00112 MOVLW  19
0006 0084           00113 MOVWF  04
0007 0800           00114 MOVF   00,W
0008 1903           00115 BTFSC  03,2
0009 2818           00116 GOTO   018
000A 3001           00117 MOVLW  01
000B 008D           00118 MOVWF  0D
000C 018C           00119 CLRF   0C
000D 0B8C           00120 DECFSZ 0C,F
000E 280D           00121 GOTO   00D
000F 0B8D           00122 DECFSZ 0D,F
0010 280C           00123 GOTO   00C
0011 3048           00124 MOVLW  48
0012 008C           00125 MOVWF  0C
0013 0B8C           00126 DECFSZ 0C,F
0014 2813           00127 GOTO   013
0015 0000           00128 NOP
0016 0B80           00129 DECFSZ 00,F
0017 280A           00130 GOTO   00A
0018 3400           00131 RETLW  00
0000                00132 .................... #use Standard_IO(A) 
0000                00133 .................... #use Standard_IO(B) 
0000                00134 ....................  
0000                00135 ....................  
0000                00136 .................... void INITIALIZE()			//startup 
0000                00137 .................... { 
0000                00138 .................... 	//set_tris_a(0x0F);		//=b'1111' 
0000                00139 .................... 	//set_tris_b(0xFF);		//=b'11111001' 
0000                00140 .................... 	setup_port_a(RA0_RA1_ANALOG);	//set up a2d 
0019 3088           00141 MOVLW  88
001A 0084           00142 MOVWF  04
001B 3002           00143 MOVLW  02
001C 0080           00144 MOVWF  00
0000                00145 .................... 	setup_adc(ADC_CLOCK_DIV_2); 
001D 0808           00146 MOVF   08,W
001E 3938           00147 ANDLW  38
001F 3801           00148 IORLW  01
0020 0088           00149 MOVWF  08
0000                00150 .................... 	set_adc_channel(0); 
0021 3000           00151 MOVLW  00
0022 008D           00152 MOVWF  0D
0023 0808           00153 MOVF   08,W
0024 39C7           00154 ANDLW  C7
0025 040D           00155 IORWF  0D,W
0026 0088           00156 MOVWF  08
0000                00157 .................... 	baseline = 100; 
0027 3064           00158 MOVLW  64
0028 0091           00159 MOVWF  11
0000                00160 .................... 	time = 32;			//each 16 is one second delay 
0029 3020           00161 MOVLW  20
002A 0092           00162 MOVWF  12
0000                00163 .................... 	output_high(vacuum_sense); 
002B 1683           00164 BSF    03,5
002C 1086           00165 BCF    06,1
002D 1283           00166 BCF    03,5
002E 1486           00167 BSF    06,1
0000                00168 .................... 	delay_ms(400); 
002F 3002           00169 MOVLW  02
0030 0093           00170 MOVWF  13
0031 30C8           00171 MOVLW  C8
0032 0099           00172 MOVWF  19
0033 2005           00173 CALL   005
0034 0B93           00174 DECFSZ 13,F
0035 2831           00175 GOTO   031
0000                00176 .................... 	output_low(vacuum_sense); 
0036 1683           00177 BSF    03,5
0037 1086           00178 BCF    06,1
0038 1283           00179 BCF    03,5
0039 1086           00180 BCF    06,1
0000                00181 .................... 	delay_ms(400); 
003A 3002           00182 MOVLW  02
003B 0093           00183 MOVWF  13
003C 30C8           00184 MOVLW  C8
003D 0099           00185 MOVWF  19
003E 2005           00186 CALL   005
003F 0B93           00187 DECFSZ 13,F
0040 283C           00188 GOTO   03C
0000                00189 .................... 	output_high(vacuum_sense); 
0041 1683           00190 BSF    03,5
0042 1086           00191 BCF    06,1
0043 1283           00192 BCF    03,5
0044 1486           00193 BSF    06,1
0000                00194 .................... 	delay_ms(400); 
0045 3002           00195 MOVLW  02
0046 0093           00196 MOVWF  13
0047 30C8           00197 MOVLW  C8
0048 0099           00198 MOVWF  19
0049 2005           00199 CALL   005
004A 0B93           00200 DECFSZ 13,F
004B 2847           00201 GOTO   047
0000                00202 .................... 	output_low(vacuum_sense); 
004C 1683           00203 BSF    03,5
004D 1086           00204 BCF    06,1
004E 1283           00205 BCF    03,5
004F 1086           00206 BCF    06,1
0000                00207 .................... 	delay_ms(400); 
0050 3002           00208 MOVLW  02
0051 0093           00209 MOVWF  13
0052 30C8           00210 MOVLW  C8
0053 0099           00211 MOVWF  19
0054 2005           00212 CALL   005
0055 0B93           00213 DECFSZ 13,F
0056 2852           00214 GOTO   052
0000                00215 .................... 	output_high(vacuum_sense); 
0057 1683           00216 BSF    03,5
0058 1086           00217 BCF    06,1
0059 1283           00218 BCF    03,5
005A 1486           00219 BSF    06,1
0000                00220 .................... 	delay_ms(400); 
005B 3002           00221 MOVLW  02
005C 0093           00222 MOVWF  13
005D 30C8           00223 MOVLW  C8
005E 0099           00224 MOVWF  19
005F 2005           00225 CALL   005
0060 0B93           00226 DECFSZ 13,F
0061 285D           00227 GOTO   05D
0000                00228 .................... 	output_low(vacuum_sense); 
0062 1683           00229 BSF    03,5
0063 1086           00230 BCF    06,1
0064 1283           00231 BCF    03,5
0065 1086           00232 BCF    06,1
0066 2982           00233 GOTO   182
0000                00234 .................... } 
0000                00235 ....................  
0000                00236 ....................  
0000                00237 .................... void SAMPLING() 
0000                00238 .................... {	int sample; 
0000                00239 ....................  
0000                00240 .................... 	output_high(vac_generator); 
00FE 1683           00241 BSF    03,5
00FF 1306           00242 BCF    06,6
0100 1283           00243 BCF    03,5
0101 1706           00244 BSF    06,6
0000                00245 .................... 	do 
0000                00246 .................... 	{	delay_us(400);				//400sets sample rate at 2500Hz 
0102 3085           00247 MOVLW  85
0103 008C           00248 MOVWF  0C
0104 0B8C           00249 DECFSZ 0C,F
0105 2904           00250 GOTO   104
0000                00251 .................... 		sample = read_adc()/2;			//takes average of two samples 
0106 1508           00252 BSF    08,2
0107 1908           00253 BTFSC  08,2
0108 2907           00254 GOTO   107
0109 0809           00255 MOVF   09,W
010A 0095           00256 MOVWF  15
010B 1003           00257 BCF    03,0
010C 0C95           00258 RRF    15,F
0000                00259 .................... 		delay_us(400); 
010D 3085           00260 MOVLW  85
010E 008C           00261 MOVWF  0C
010F 0B8C           00262 DECFSZ 0C,F
0110 290F           00263 GOTO   10F
0000                00264 .................... 		sample = sample + read_adc()/2; 
0111 1508           00265 BSF    08,2
0112 1908           00266 BTFSC  08,2
0113 2912           00267 GOTO   112
0114 0809           00268 MOVF   09,W
0115 008C           00269 MOVWF  0C
0116 1003           00270 BCF    03,0
0117 0C8C           00271 RRF    0C,F
0118 080C           00272 MOVF   0C,W
0119 0795           00273 ADDWF  15,F
0000                00274 .................... 		if (sample < baseline) output_low(vacuum_sense); 
011A 0811           00275 MOVF   11,W
011B 0215           00276 SUBWF  15,W
011C 1803           00277 BTFSC  03,0
011D 2923           00278 GOTO   123
011E 1683           00279 BSF    03,5
011F 1086           00280 BCF    06,1
0120 1283           00281 BCF    03,5
0121 1086           00282 BCF    06,1
0000                00283 .................... 		else output_high(vacuum_sense); 
0122 2927           00284 GOTO   127
0123 1683           00285 BSF    03,5
0124 1086           00286 BCF    06,1
0125 1283           00287 BCF    03,5
0126 1486           00288 BSF    06,1
0000                00289 .................... 	} while (!input(vac_solonoid));			//is solinoid on? 
0127 1683           00290 BSF    03,5
0128 1406           00291 BSF    06,0
0129 1283           00292 BCF    03,5
012A 1C06           00293 BTFSS  06,0
012B 2902           00294 GOTO   102
0000                00295 .................... 	if (sample > baseline)  
012C 0815           00296 MOVF   15,W
012D 0211           00297 SUBWF  11,W
012E 1803           00298 BTFSC  03,0
012F 2950           00299 GOTO   150
0000                00300 .................... 	{	 
0000                00301 ....................  		do 
0000                00302 .................... 		{delay_us(400);				//sets sample rate at 2500Hz 
0130 3085           00303 MOVLW  85
0131 008C           00304 MOVWF  0C
0132 0B8C           00305 DECFSZ 0C,F
0133 2932           00306 GOTO   132
0000                00307 .................... 		sample = read_adc()/2;			//takes average of two samples 
0134 1508           00308 BSF    08,2
0135 1908           00309 BTFSC  08,2
0136 2935           00310 GOTO   135
0137 0809           00311 MOVF   09,W
0138 0095           00312 MOVWF  15
0139 1003           00313 BCF    03,0
013A 0C95           00314 RRF    15,F
0000                00315 .................... 		delay_us(400); 
013B 3085           00316 MOVLW  85
013C 008C           00317 MOVWF  0C
013D 0B8C           00318 DECFSZ 0C,F
013E 293D           00319 GOTO   13D
0000                00320 .................... 		sample = sample + read_adc()/2; 
013F 1508           00321 BSF    08,2
0140 1908           00322 BTFSC  08,2
0141 2940           00323 GOTO   140
0142 0809           00324 MOVF   09,W
0143 008C           00325 MOVWF  0C
0144 1003           00326 BCF    03,0
0145 0C8C           00327 RRF    0C,F
0146 080C           00328 MOVF   0C,W
0147 0795           00329 ADDWF  15,F
0000                00330 .................... 		} while (sample > min_vac);		//is vacuum low? 
0148 3015           00331 MOVLW  15
0149 0215           00332 SUBWF  15,W
014A 1803           00333 BTFSC  03,0
014B 2930           00334 GOTO   130
0000                00335 ....................  		output_low(vacuum_sense); 
014C 1683           00336 BSF    03,5
014D 1086           00337 BCF    06,1
014E 1283           00338 BCF    03,5
014F 1086           00339 BCF    06,1
0000                00340 .................... 	} 
0000                00341 .................... 	setup_counters(rtcc_internal,rtcc_div_256);	//sets up 2 second delay for generator 
0150 3007           00342 MOVLW  07
0151 008C           00343 MOVWF  0C
0152 1D8C           00344 BTFSS  0C,3
0153 295C           00345 GOTO   15C
0154 3007           00346 MOVLW  07
0155 0181           00347 CLRF   01
0156 3081           00348 MOVLW  81
0157 0084           00349 MOVWF  04
0158 0800           00350 MOVF   00,W
0159 39C0           00351 ANDLW  C0
015A 380F           00352 IORLW  0F
015B 0080           00353 MOVWF  00
015C 0064           00354 CLRWDT
015D 3081           00355 MOVLW  81
015E 0084           00356 MOVWF  04
015F 0800           00357 MOVF   00,W
0160 39C0           00358 ANDLW  C0
0161 040C           00359 IORWF  0C,W
0162 0080           00360 MOVWF  00
0000                00361 .................... 	set_rtcc(1); 
0163 3001           00362 MOVLW  01
0164 0081           00363 MOVWF  01
0000                00364 .................... 	time = 0; 
0165 0192           00365 CLRF   12
0000                00366 .................... 	return; 
0000                00367 .................... } 
0000                00368 ....................  
0000                00369 ....................  
0000                00370 .................... void READ_BASELINE() 
0000                00371 .................... {	int x; 
0000                00372 .................... 	long temp; 
0000                00373 ....................  
0000                00374 .................... 	output_high(vac_generator); 
00A3 1683           00375 BSF    03,5
00A4 1306           00376 BCF    06,6
00A5 1283           00377 BCF    03,5
00A6 1706           00378 BSF    06,6
0000                00379 .................... 	output_high(vacuum_sol_drive); 
00A7 1683           00380 BSF    03,5
00A8 1106           00381 BCF    06,2
00A9 1283           00382 BCF    03,5
00AA 1506           00383 BSF    06,2
0000                00384 .................... 	delay_ms(300); 
00AB 3002           00385 MOVLW  02
00AC 0098           00386 MOVWF  18
00AD 3096           00387 MOVLW  96
00AE 0099           00388 MOVWF  19
00AF 2005           00389 CALL   005
00B0 0B98           00390 DECFSZ 18,F
00B1 28AD           00391 GOTO   0AD
0000                00392 .................... 	baseline = 0; 
00B2 0191           00393 CLRF   11
0000                00394 .................... 	temp = 0; 
00B3 0197           00395 CLRF   17
00B4 0196           00396 CLRF   16
0000                00397 .................... 	for (x = 0;x != 8;x++){ 
00B5 0195           00398 CLRF   15
00B6 3008           00399 MOVLW  08
00B7 0215           00400 SUBWF  15,W
00B8 1903           00401 BTFSC  03,2
00B9 28C6           00402 GOTO   0C6
0000                00403 .................... 		delay_ms(2); 
00BA 3002           00404 MOVLW  02
00BB 0099           00405 MOVWF  19
00BC 2005           00406 CALL   005
0000                00407 .................... 		temp = temp + read_adc(); 
00BD 1508           00408 BSF    08,2
00BE 1908           00409 BTFSC  08,2
00BF 28BE           00410 GOTO   0BE
00C0 0809           00411 MOVF   09,W
00C1 0796           00412 ADDWF  16,F
00C2 1803           00413 BTFSC  03,0
00C3 0A97           00414 INCF   17,F
0000                00415 .................... 		} 
00C4 0A95           00416 INCF   15,F
00C5 28B6           00417 GOTO   0B6
0000                00418 .................... 	temp = temp / 8;				//take average of 8 samples 
00C6 0C97           00419 RRF    17,F
00C7 0C96           00420 RRF    16,F
00C8 0C97           00421 RRF    17,F
00C9 0C96           00422 RRF    16,F
00CA 0C97           00423 RRF    17,F
00CB 0C96           00424 RRF    16,F
00CC 301F           00425 MOVLW  1F
00CD 0597           00426 ANDWF  17,F
0000                00427 .................... 	baseline = 4 + temp + (211 - temp)/8;		//baseline1 = 4 + baseline0 +.125*(maxvac-baseline0) 
00CE 3004           00428 MOVLW  04
00CF 0716           00429 ADDWF  16,W
00D0 0098           00430 MOVWF  18
00D1 3000           00431 MOVLW  00
00D2 1803           00432 BTFSC  03,0
00D3 3E01           00433 ADDLW  01
00D4 0717           00434 ADDWF  17,W
00D5 0099           00435 MOVWF  19
00D6 30D3           00436 MOVLW  D3
00D7 009A           00437 MOVWF  1A
00D8 0816           00438 MOVF   16,W
00D9 029A           00439 SUBWF  1A,F
00DA 3000           00440 MOVLW  00
00DB 009B           00441 MOVWF  1B
00DC 0817           00442 MOVF   17,W
00DD 1C03           00443 BTFSS  03,0
00DE 039B           00444 DECF   1B,F
00DF 029B           00445 SUBWF  1B,F
00E0 081A           00446 MOVF   1A,W
00E1 008C           00447 MOVWF  0C
00E2 081B           00448 MOVF   1B,W
00E3 008E           00449 MOVWF  0E
00E4 0C8E           00450 RRF    0E,F
00E5 0C8C           00451 RRF    0C,F
00E6 0C8E           00452 RRF    0E,F
00E7 0C8C           00453 RRF    0C,F
00E8 0C8E           00454 RRF    0E,F
00E9 0C8C           00455 RRF    0C,F
00EA 301F           00456 MOVLW  1F
00EB 058E           00457 ANDWF  0E,F
00EC 080E           00458 MOVF   0E,W
00ED 008F           00459 MOVWF  0F
00EE 080C           00460 MOVF   0C,W
00EF 0718           00461 ADDWF  18,W
00F0 0091           00462 MOVWF  11
0000                00463 .................... 	output_low(vacuum_sense); 
00F1 1683           00464 BSF    03,5
00F2 1086           00465 BCF    06,1
00F3 1283           00466 BCF    03,5
00F4 1086           00467 BCF    06,1
0000                00468 .................... 	output_low(vac_generator); 
00F5 1683           00469 BSF    03,5
00F6 1306           00470 BCF    06,6
00F7 1283           00471 BCF    03,5
00F8 1306           00472 BCF    06,6
0000                00473 .................... 	output_low(vacuum_sol_drive); 
00F9 1683           00474 BSF    03,5
00FA 1106           00475 BCF    06,2
00FB 1283           00476 BCF    03,5
00FC 1106           00477 BCF    06,2
0000                00478 .................... 	return; 
0000                00479 .................... } 
0000                00480 ....................  
0000                00481 ....................  
0000                00482 .................... void MODE()						//setup baseline or normal sample mode? 
0000                00483 .................... {	int test,logic; 
0000                00484 ....................  
0000                00485 .................... 	logic = 1; 
0067 3001           00486 MOVLW  01
0068 0094           00487 MOVWF  14
0000                00488 .................... 	test = 1; 
0069 0093           00489 MOVWF  13
0000                00490 .................... 	setup_counters(rtcc_internal,rtcc_div_8); 
006A 3002           00491 MOVLW  02
006B 008C           00492 MOVWF  0C
006C 1D8C           00493 BTFSS  0C,3
006D 2876           00494 GOTO   076
006E 3007           00495 MOVLW  07
006F 0181           00496 CLRF   01
0070 3081           00497 MOVLW  81
0071 0084           00498 MOVWF  04
0072 0800           00499 MOVF   00,W
0073 39C0           00500 ANDLW  C0
0074 380F           00501 IORLW  0F
0075 0080           00502 MOVWF  00
0076 0064           00503 CLRWDT
0077 3081           00504 MOVLW  81
0078 0084           00505 MOVWF  04
0079 0800           00506 MOVF   00,W
007A 39C0           00507 ANDLW  C0
007B 040C           00508 IORWF  0C,W
007C 0080           00509 MOVWF  00
0000                00510 .................... 	set_rtcc(68); 
007D 3044           00511 MOVLW  44
007E 0081           00512 MOVWF  01
0000                00513 .................... 	do						//test to see 3 changes in state 
0000                00514 .................... 	{	if (input(vac_solonoid) == logic) 
007F 1683           00515 BSF    03,5
0080 1406           00516 BSF    06,0
0081 3000           00517 MOVLW  00
0082 1283           00518 BCF    03,5
0083 1806           00519 BTFSC  06,0
0084 3001           00520 MOVLW  01
0085 0214           00521 SUBWF  14,W
0086 1D03           00522 BTFSS  03,2
0087 2891           00523 GOTO   091
0000                00524 .................... 		{	test = test + 1; 
0088 3001           00525 MOVLW  01
0089 0793           00526 ADDWF  13,F
0000                00527 .................... 			if (logic == 0) logic = 1; 
008A 0894           00528 MOVF   14,F
008B 1D03           00529 BTFSS  03,2
008C 2890           00530 GOTO   090
008D 3001           00531 MOVLW  01
008E 0094           00532 MOVWF  14
0000                00533 .................... 			else logic = 0; 
008F 2891           00534 GOTO   091
0090 0194           00535 CLRF   14
0000                00536 .................... 		} 
0000                00537 .................... 	} while (get_rtcc() > 67);			//check mode for 1.5ms 
0091 0801           00538 MOVF   01,W
0092 008C           00539 MOVWF  0C
0093 3044           00540 MOVLW  44
0094 020C           00541 SUBWF  0C,W
0095 1803           00542 BTFSC  03,0
0096 287F           00543 GOTO   07F
0000                00544 .................... 	if (test == 6) output_high(vacuum_sense); 
0097 3006           00545 MOVLW  06
0098 0213           00546 SUBWF  13,W
0099 1D03           00547 BTFSS  03,2
009A 289F           00548 GOTO   09F
009B 1683           00549 BSF    03,5
009C 1086           00550 BCF    06,1
009D 1283           00551 BCF    03,5
009E 1486           00552 BSF    06,1
0000                00553 .................... 	if (test >= 4) READ_BASELINE();			//if one or more toggle then goto setup 
009F 3004           00554 MOVLW  04
00A0 0213           00555 SUBWF  13,W
00A1 1C03           00556 BTFSS  03,0
00A2 28FE           00557 GOTO   0FE
0000                00558 .................... 	else SAMPLING(); 
00FD 2966           00559 GOTO   166
0000                00560 .................... 	return; 
0166 2987           00561 GOTO   187
0000                00562 .................... } 
0000                00563 ....................  
0000                00564 .................... 	 
0000                00565 .................... TIMEOFF()						//check to see if 2 seconds has elapsed	 
0000                00566 .................... {	if (time == 32) return;				//before the vacuum gen will be shut off 
0167 3020           00567 MOVLW  20
0168 0212           00568 SUBWF  12,W
0169 1D03           00569 BTFSS  03,2
016A 296D           00570 GOTO   16D
016B 2979           00571 GOTO   179
0000                00572 .................... 	else 
016C 2979           00573 GOTO   179
0000                00574 .................... 	{	time++; 
016D 0A92           00575 INCF   12,F
0000                00576 .................... 		set_rtcc(1); 
016E 3001           00577 MOVLW  01
016F 0081           00578 MOVWF  01
0000                00579 .................... 		if (time == 32) output_low(vac_generator); 
0170 3020           00580 MOVLW  20
0171 0212           00581 SUBWF  12,W
0172 1D03           00582 BTFSS  03,2
0173 2978           00583 GOTO   178
0174 1683           00584 BSF    03,5
0175 1306           00585 BCF    06,6
0176 1283           00586 BCF    03,5
0177 1306           00587 BCF    06,6
0000                00588 .................... 		return; 
0178 2979           00589 GOTO   179
0000                00590 .................... 	} 
0179 298A           00591 GOTO   18A
0000                00592 .................... } 
0000                00593 ....................  
0000                00594 .................... MAIN() 
0000                00595 .................... {	INITIALIZE(); 
017A 0184           00596 CLRF   04
017B 0183           00597 CLRF   03
017C 3088           00598 MOVLW  88
017D 0084           00599 MOVWF  04
017E 0084           00600 MOVWF  04
017F 3007           00601 MOVLW  07
0180 0080           00602 MOVWF  00
0181 2819           00603 GOTO   019
0000                00604 .................... 	do 
0000                00605 .................... 	{ 
0000                00606 .................... 		if (!input(vac_solonoid)) MODE(); 
0182 1683           00607 BSF    03,5
0183 1406           00608 BSF    06,0
0184 1283           00609 BCF    03,5
0185 1C06           00610 BTFSS  06,0
0186 2867           00611 GOTO   067
0000                00612 .................... 		if (get_rtcc() == 0) TIMEOFF(); 
0187 0801           00613 MOVF   01,W
0188 1903           00614 BTFSC  03,2
0189 2967           00615 GOTO   167
0000                00616 .................... 	} while(true);	 
018A 2982           00617 GOTO   182
0000                00618 .................... } 
018B 0063           0619 SLEEP

SYMBOL TABLE
  LABEL                             VALUE

_RETURN_                          0000000D
BASELINE                          00000011
TIME                              00000012
MODE.TEST                         00000013
MODE.LOGIC                        00000014
SAMPLING.SAMPLE                   00000015
READ_BASELINE.X                   00000015
READ_BASELINE.TEMP                00000016
DELAY_MS.P1                       00000019
DELAY_US.P1                       0000FEEF
DELAY_MS                          00000005
INITIALIZE                        00000019
MODE                              00000067
TIMEOFF                           00000167
MAIN                              0000017A

MEMORY USAGE
