MPASM

CCS PCW C Compiler, Version 2.548, 4813

               Filename: C:\project\vac\vs.LST

               ROM used: 396 (39%)
                         396 (39%) including unused fragments
               RAM used: 8 (22%) at main() level
                         16 (44%) worst case
               Stack:    2 locations

0000 3000           00001 MOVLW  00
0001 008A           00002 MOVWF  0A
0002 297A           00003 GOTO   17A
0003 0000           00004 NOP
0004 0000           00005 NOP
0000                00006 ....................  /*    Vaccuum Switch Controller    							*/ 
0000                00007 .................... /*    Revision 1.0 5/5/98          							*/ 
0000                00008 ....................  
0000                00009 .................... #include "16C71.H" 
0000                00010 ....................  //////// Standard Header file for the PIC16C71 device //////// 
0000                00011 .................... #device PIC16C71 
0000                00087 .................... #list 
0000                00088 .................... 
0000                00089 ....................  
0000                00090 .................... 			//application specific definitions 
0000                00091 .................... #define min_vac 20 
0000                00092 .................... #define vac_solonoid PIN_B0		//input pc calling for vacuum 
0000                00093 .................... #define vacuum_sense PIN_B1		//output component confirmation to pc 
0000                00094 .................... #define vacuum_sol_drive PIN_B2		//output to turn vac sol on 
0000                00095 .................... #define vac_generator PIN_B6		//output to turn vac gen on 
0000                00096 ....................  
0000                00097 .................... 			//global definitions 
0000                00098 .................... int baseline,time; 
0000                00099 ....................  
0000                00100 ....................  
0000                00101 ....................  
0000                00102 .................... #fuses XT,NOPROTECT,NOWDT 
0000                00103 .................... #use DELAY(clock=4000000) 
0005 3019           00104 MOVLW  19
0006 0084           00105 MOVWF  04
0007 0800           00106 MOVF   00,W
0008 1903           00107 BTFSC  03,2
0009 2818           00108 GOTO   018
000A 3001           00109 MOVLW  01
000B 008D           00110 MOVWF  0D
000C 018C           00111 CLRF   0C
000D 0B8C           00112 DECFSZ 0C,F
000E 280D           00113 GOTO   00D
000F 0B8D           00114 DECFSZ 0D,F
0010 280C           00115 GOTO   00C
0011 3048           00116 MOVLW  48
0012 008C           00117 MOVWF  0C
0013 0B8C           00118 DECFSZ 0C,F
0014 2813           00119 GOTO   013
0015 0000           00120 NOP
0016 0B80           00121 DECFSZ 00,F
0017 280A           00122 GOTO   00A
0018 3400           00123 RETLW  00
0000                00124 .................... #use Standard_IO(A) 
0000                00125 .................... #use Standard_IO(B) 
0000                00126 ....................  
0000                00127 ....................  
0000                00128 .................... void INITIALIZE()			//startup 
0000                00129 .................... { 
0000                00130 .................... 	//set_tris_a(0x0F);		//=b'1111' 
0000                00131 .................... 	//set_tris_b(0xFF);		//=b'11111001' 
0000                00132 .................... 	setup_port_a(RA0_RA1_ANALOG);	//set up a2d 
0019 3088           00133 MOVLW  88
001A 0084           00134 MOVWF  04
001B 3002           00135 MOVLW  02
001C 0080           00136 MOVWF  00
0000                00137 .................... 	setup_adc(ADC_CLOCK_DIV_2); 
001D 0808           00138 MOVF   08,W
001E 3938           00139 ANDLW  38
001F 3801           00140 IORLW  01
0020 0088           00141 MOVWF  08
0000                00142 .................... 	set_adc_channel(0); 
0021 3000           00143 MOVLW  00
0022 008D           00144 MOVWF  0D
0023 0808           00145 MOVF   08,W
0024 39C7           00146 ANDLW  C7
0025 040D           00147 IORWF  0D,W
0026 0088           00148 MOVWF  08
0000                00149 .................... 	baseline = 100; 
0027 3064           00150 MOVLW  64
0028 0091           00151 MOVWF  11
0000                00152 .................... 	time = 32;			//each 16 is one second delay 
0029 3020           00153 MOVLW  20
002A 0092           00154 MOVWF  12
0000                00155 .................... 	output_high(vacuum_sense); 
002B 1683           00156 BSF    03,5
002C 1086           00157 BCF    06,1
002D 1283           00158 BCF    03,5
002E 1486           00159 BSF    06,1
0000                00160 .................... 	delay_ms(400); 
002F 3002           00161 MOVLW  02
0030 0093           00162 MOVWF  13
0031 30C8           00163 MOVLW  C8
0032 0099           00164 MOVWF  19
0033 2005           00165 CALL   005
0034 0B93           00166 DECFSZ 13,F
0035 2831           00167 GOTO   031
0000                00168 .................... 	output_low(vacuum_sense); 
0036 1683           00169 BSF    03,5
0037 1086           00170 BCF    06,1
0038 1283           00171 BCF    03,5
0039 1086           00172 BCF    06,1
0000                00173 .................... 	delay_ms(400); 
003A 3002           00174 MOVLW  02
003B 0093           00175 MOVWF  13
003C 30C8           00176 MOVLW  C8
003D 0099           00177 MOVWF  19
003E 2005           00178 CALL   005
003F 0B93           00179 DECFSZ 13,F
0040 283C           00180 GOTO   03C
0000                00181 .................... 	output_high(vacuum_sense); 
0041 1683           00182 BSF    03,5
0042 1086           00183 BCF    06,1
0043 1283           00184 BCF    03,5
0044 1486           00185 BSF    06,1
0000                00186 .................... 	delay_ms(400); 
0045 3002           00187 MOVLW  02
0046 0093           00188 MOVWF  13
0047 30C8           00189 MOVLW  C8
0048 0099           00190 MOVWF  19
0049 2005           00191 CALL   005
004A 0B93           00192 DECFSZ 13,F
004B 2847           00193 GOTO   047
0000                00194 .................... 	output_low(vacuum_sense); 
004C 1683           00195 BSF    03,5
004D 1086           00196 BCF    06,1
004E 1283           00197 BCF    03,5
004F 1086           00198 BCF    06,1
0000                00199 .................... 	delay_ms(400); 
0050 3002           00200 MOVLW  02
0051 0093           00201 MOVWF  13
0052 30C8           00202 MOVLW  C8
0053 0099           00203 MOVWF  19
0054 2005           00204 CALL   005
0055 0B93           00205 DECFSZ 13,F
0056 2852           00206 GOTO   052
0000                00207 .................... 	output_high(vacuum_sense); 
0057 1683           00208 BSF    03,5
0058 1086           00209 BCF    06,1
0059 1283           00210 BCF    03,5
005A 1486           00211 BSF    06,1
0000                00212 .................... 	delay_ms(400); 
005B 3002           00213 MOVLW  02
005C 0093           00214 MOVWF  13
005D 30C8           00215 MOVLW  C8
005E 0099           00216 MOVWF  19
005F 2005           00217 CALL   005
0060 0B93           00218 DECFSZ 13,F
0061 285D           00219 GOTO   05D
0000                00220 .................... 	output_low(vacuum_sense); 
0062 1683           00221 BSF    03,5
0063 1086           00222 BCF    06,1
0064 1283           00223 BCF    03,5
0065 1086           00224 BCF    06,1
0066 2982           00225 GOTO   182
0000                00226 .................... } 
0000                00227 ....................  
0000                00228 ....................  
0000                00229 .................... void SAMPLING() 
0000                00230 .................... {	int sample; 
0000                00231 ....................  
0000                00232 .................... 	output_high(vac_generator); 
00FE 1683           00233 BSF    03,5
00FF 1306           00234 BCF    06,6
0100 1283           00235 BCF    03,5
0101 1706           00236 BSF    06,6
0000                00237 .................... 	do 
0000                00238 .................... 	{	delay_us(400);				//400sets sample rate at 2500Hz 
0102 3085           00239 MOVLW  85
0103 008C           00240 MOVWF  0C
0104 0B8C           00241 DECFSZ 0C,F
0105 2904           00242 GOTO   104
0000                00243 .................... 		sample = read_adc()/2;			//takes average of two samples 
0106 1508           00244 BSF    08,2
0107 1908           00245 BTFSC  08,2
0108 2907           00246 GOTO   107
0109 0809           00247 MOVF   09,W
010A 0095           00248 MOVWF  15
010B 1003           00249 BCF    03,0
010C 0C95           00250 RRF    15,F
0000                00251 .................... 		delay_us(400); 
010D 3085           00252 MOVLW  85
010E 008C           00253 MOVWF  0C
010F 0B8C           00254 DECFSZ 0C,F
0110 290F           00255 GOTO   10F
0000                00256 .................... 		sample = sample + read_adc()/2; 
0111 1508           00257 BSF    08,2
0112 1908           00258 BTFSC  08,2
0113 2912           00259 GOTO   112
0114 0809           00260 MOVF   09,W
0115 008C           00261 MOVWF  0C
0116 1003           00262 BCF    03,0
0117 0C8C           00263 RRF    0C,F
0118 080C           00264 MOVF   0C,W
0119 0795           00265 ADDWF  15,F
0000                00266 .................... 		if (sample < baseline) output_low(vacuum_sense); 
011A 0811           00267 MOVF   11,W
011B 0215           00268 SUBWF  15,W
011C 1803           00269 BTFSC  03,0
011D 2923           00270 GOTO   123
011E 1683           00271 BSF    03,5
011F 1086           00272 BCF    06,1
0120 1283           00273 BCF    03,5
0121 1086           00274 BCF    06,1
0000                00275 .................... 		else output_high(vacuum_sense); 
0122 2927           00276 GOTO   127
0123 1683           00277 BSF    03,5
0124 1086           00278 BCF    06,1
0125 1283           00279 BCF    03,5
0126 1486           00280 BSF    06,1
0000                00281 .................... 	} while (!input(vac_solonoid));			//is solinoid on? 
0127 1683           00282 BSF    03,5
0128 1406           00283 BSF    06,0
0129 1283           00284 BCF    03,5
012A 1C06           00285 BTFSS  06,0
012B 2902           00286 GOTO   102
0000                00287 .................... 	if (sample > baseline)  
012C 0815           00288 MOVF   15,W
012D 0211           00289 SUBWF  11,W
012E 1803           00290 BTFSC  03,0
012F 2950           00291 GOTO   150
0000                00292 .................... 	{	 
0000                00293 ....................  		do 
0000                00294 .................... 		{delay_us(400);				//sets sample rate at 2500Hz 
0130 3085           00295 MOVLW  85
0131 008C           00296 MOVWF  0C
0132 0B8C           00297 DECFSZ 0C,F
0133 2932           00298 GOTO   132
0000                00299 .................... 		sample = read_adc()/2;			//takes average of two samples 
0134 1508           00300 BSF    08,2
0135 1908           00301 BTFSC  08,2
0136 2935           00302 GOTO   135
0137 0809           00303 MOVF   09,W
0138 0095           00304 MOVWF  15
0139 1003           00305 BCF    03,0
013A 0C95           00306 RRF    15,F
0000                00307 .................... 		delay_us(400); 
013B 3085           00308 MOVLW  85
013C 008C           00309 MOVWF  0C
013D 0B8C           00310 DECFSZ 0C,F
013E 293D           00311 GOTO   13D
0000                00312 .................... 		sample = sample + read_adc()/2; 
013F 1508           00313 BSF    08,2
0140 1908           00314 BTFSC  08,2
0141 2940           00315 GOTO   140
0142 0809           00316 MOVF   09,W
0143 008C           00317 MOVWF  0C
0144 1003           00318 BCF    03,0
0145 0C8C           00319 RRF    0C,F
0146 080C           00320 MOVF   0C,W
0147 0795           00321 ADDWF  15,F
0000                00322 .................... 		} while (sample > min_vac);		//is vacuum low? 
0148 3015           00323 MOVLW  15
0149 0215           00324 SUBWF  15,W
014A 1803           00325 BTFSC  03,0
014B 2930           00326 GOTO   130
0000                00327 ....................  		output_low(vacuum_sense); 
014C 1683           00328 BSF    03,5
014D 1086           00329 BCF    06,1
014E 1283           00330 BCF    03,5
014F 1086           00331 BCF    06,1
0000                00332 .................... 	} 
0000                00333 .................... 	setup_counters(rtcc_internal,rtcc_div_256);	//sets up 2 second delay for generator 
0150 3007           00334 MOVLW  07
0151 008C           00335 MOVWF  0C
0152 1D8C           00336 BTFSS  0C,3
0153 295C           00337 GOTO   15C
0154 3007           00338 MOVLW  07
0155 0181           00339 CLRF   01
0156 3081           00340 MOVLW  81
0157 0084           00341 MOVWF  04
0158 0800           00342 MOVF   00,W
0159 39C0           00343 ANDLW  C0
015A 380F           00344 IORLW  0F
015B 0080           00345 MOVWF  00
015C 0064           00346 CLRWDT
015D 3081           00347 MOVLW  81
015E 0084           00348 MOVWF  04
015F 0800           00349 MOVF   00,W
0160 39C0           00350 ANDLW  C0
0161 040C           00351 IORWF  0C,W
0162 0080           00352 MOVWF  00
0000                00353 .................... 	set_rtcc(1); 
0163 3001           00354 MOVLW  01
0164 0081           00355 MOVWF  01
0000                00356 .................... 	time = 0; 
0165 0192           00357 CLRF   12
0000                00358 .................... 	return; 
0000                00359 .................... } 
0000                00360 ....................  
0000                00361 ....................  
0000                00362 .................... void READ_BASELINE() 
0000                00363 .................... {	int x; 
0000                00364 .................... 	long temp; 
0000                00365 ....................  
0000                00366 .................... 	output_high(vac_generator); 
00A3 1683           00367 BSF    03,5
00A4 1306           00368 BCF    06,6
00A5 1283           00369 BCF    03,5
00A6 1706           00370 BSF    06,6
0000                00371 .................... 	output_high(vacuum_sol_drive); 
00A7 1683           00372 BSF    03,5
00A8 1106           00373 BCF    06,2
00A9 1283           00374 BCF    03,5
00AA 1506           00375 BSF    06,2
0000                00376 .................... 	delay_ms(300); 
00AB 3002           00377 MOVLW  02
00AC 0098           00378 MOVWF  18
00AD 3096           00379 MOVLW  96
00AE 0099           00380 MOVWF  19
00AF 2005           00381 CALL   005
00B0 0B98           00382 DECFSZ 18,F
00B1 28AD           00383 GOTO   0AD
0000                00384 .................... 	baseline = 0; 
00B2 0191           00385 CLRF   11
0000                00386 .................... 	temp = 0; 
00B3 0197           00387 CLRF   17
00B4 0196           00388 CLRF   16
0000                00389 .................... 	for (x = 0;x != 8;x++){ 
00B5 0195           00390 CLRF   15
00B6 3008           00391 MOVLW  08
00B7 0215           00392 SUBWF  15,W
00B8 1903           00393 BTFSC  03,2
00B9 28C6           00394 GOTO   0C6
0000                00395 .................... 		delay_ms(2); 
00BA 3002           00396 MOVLW  02
00BB 0099           00397 MOVWF  19
00BC 2005           00398 CALL   005
0000                00399 .................... 		temp = temp + read_adc(); 
00BD 1508           00400 BSF    08,2
00BE 1908           00401 BTFSC  08,2
00BF 28BE           00402 GOTO   0BE
00C0 0809           00403 MOVF   09,W
00C1 0796           00404 ADDWF  16,F
00C2 1803           00405 BTFSC  03,0
00C3 0A97           00406 INCF   17,F
0000                00407 .................... 		} 
00C4 0A95           00408 INCF   15,F
00C5 28B6           00409 GOTO   0B6
0000                00410 .................... 	temp = temp / 8;				//take average of 8 samples 
00C6 0C97           00411 RRF    17,F
00C7 0C96           00412 RRF    16,F
00C8 0C97           00413 RRF    17,F
00C9 0C96           00414 RRF    16,F
00CA 0C97           00415 RRF    17,F
00CB 0C96           00416 RRF    16,F
00CC 301F           00417 MOVLW  1F
00CD 0597           00418 ANDWF  17,F
0000                00419 .................... 	baseline = 4 + temp + (211 - temp)/8;		//baseline1 = 4 + baseline0 +.125*(maxvac-baseline0) 
00CE 3004           00420 MOVLW  04
00CF 0716           00421 ADDWF  16,W
00D0 0098           00422 MOVWF  18
00D1 3000           00423 MOVLW  00
00D2 1803           00424 BTFSC  03,0
00D3 3E01           00425 ADDLW  01
00D4 0717           00426 ADDWF  17,W
00D5 0099           00427 MOVWF  19
00D6 30D3           00428 MOVLW  D3
00D7 009A           00429 MOVWF  1A
00D8 0816           00430 MOVF   16,W
00D9 029A           00431 SUBWF  1A,F
00DA 3000           00432 MOVLW  00
00DB 009B           00433 MOVWF  1B
00DC 0817           00434 MOVF   17,W
00DD 1C03           00435 BTFSS  03,0
00DE 039B           00436 DECF   1B,F
00DF 029B           00437 SUBWF  1B,F
00E0 081A           00438 MOVF   1A,W
00E1 008C           00439 MOVWF  0C
00E2 081B           00440 MOVF   1B,W
00E3 008E           00441 MOVWF  0E
00E4 0C8E           00442 RRF    0E,F
00E5 0C8C           00443 RRF    0C,F
00E6 0C8E           00444 RRF    0E,F
00E7 0C8C           00445 RRF    0C,F
00E8 0C8E           00446 RRF    0E,F
00E9 0C8C           00447 RRF    0C,F
00EA 301F           00448 MOVLW  1F
00EB 058E           00449 ANDWF  0E,F
00EC 080E           00450 MOVF   0E,W
00ED 008F           00451 MOVWF  0F
00EE 080C           00452 MOVF   0C,W
00EF 0718           00453 ADDWF  18,W
00F0 0091           00454 MOVWF  11
0000                00455 .................... 	output_low(vacuum_sense); 
00F1 1683           00456 BSF    03,5
00F2 1086           00457 BCF    06,1
00F3 1283           00458 BCF    03,5
00F4 1086           00459 BCF    06,1
0000                00460 .................... 	output_low(vac_generator); 
00F5 1683           00461 BSF    03,5
00F6 1306           00462 BCF    06,6
00F7 1283           00463 BCF    03,5
00F8 1306           00464 BCF    06,6
0000                00465 .................... 	output_low(vacuum_sol_drive); 
00F9 1683           00466 BSF    03,5
00FA 1106           00467 BCF    06,2
00FB 1283           00468 BCF    03,5
00FC 1106           00469 BCF    06,2
0000                00470 .................... 	return; 
0000                00471 .................... } 
0000                00472 ....................  
0000                00473 ....................  
0000                00474 .................... void MODE()						//setup baseline or normal sample mode? 
0000                00475 .................... {	int test,logic; 
0000                00476 ....................  
0000                00477 .................... 	logic = 1; 
0067 3001           00478 MOVLW  01
0068 0094           00479 MOVWF  14
0000                00480 .................... 	test = 1; 
0069 0093           00481 MOVWF  13
0000                00482 .................... 	setup_counters(rtcc_internal,rtcc_div_8); 
006A 3002           00483 MOVLW  02
006B 008C           00484 MOVWF  0C
006C 1D8C           00485 BTFSS  0C,3
006D 2876           00486 GOTO   076
006E 3007           00487 MOVLW  07
006F 0181           00488 CLRF   01
0070 3081           00489 MOVLW  81
0071 0084           00490 MOVWF  04
0072 0800           00491 MOVF   00,W
0073 39C0           00492 ANDLW  C0
0074 380F           00493 IORLW  0F
0075 0080           00494 MOVWF  00
0076 0064           00495 CLRWDT
0077 3081           00496 MOVLW  81
0078 0084           00497 MOVWF  04
0079 0800           00498 MOVF   00,W
007A 39C0           00499 ANDLW  C0
007B 040C           00500 IORWF  0C,W
007C 0080           00501 MOVWF  00
0000                00502 .................... 	set_rtcc(68); 
007D 3044           00503 MOVLW  44
007E 0081           00504 MOVWF  01
0000                00505 .................... 	do						//test to see 3 changes in state 
0000                00506 .................... 	{	if (input(vac_solonoid) == logic) 
007F 1683           00507 BSF    03,5
0080 1406           00508 BSF    06,0
0081 3000           00509 MOVLW  00
0082 1283           00510 BCF    03,5
0083 1806           00511 BTFSC  06,0
0084 3001           00512 MOVLW  01
0085 0214           00513 SUBWF  14,W
0086 1D03           00514 BTFSS  03,2
0087 2891           00515 GOTO   091
0000                00516 .................... 		{	test = test + 1; 
0088 3001           00517 MOVLW  01
0089 0793           00518 ADDWF  13,F
0000                00519 .................... 			if (logic == 0) logic = 1; 
008A 0894           00520 MOVF   14,F
008B 1D03           00521 BTFSS  03,2
008C 2890           00522 GOTO   090
008D 3001           00523 MOVLW  01
008E 0094           00524 MOVWF  14
0000                00525 .................... 			else logic = 0; 
008F 2891           00526 GOTO   091
0090 0194           00527 CLRF   14
0000                00528 .................... 		} 
0000                00529 .................... 	} while (get_rtcc() > 67);			//check mode for 1.5ms 
0091 0801           00530 MOVF   01,W
0092 008C           00531 MOVWF  0C
0093 3044           00532 MOVLW  44
0094 020C           00533 SUBWF  0C,W
0095 1803           00534 BTFSC  03,0
0096 287F           00535 GOTO   07F
0000                00536 .................... 	if (test == 5) output_high(vacuum_sense); 
0097 3005           00537 MOVLW  05
0098 0213           00538 SUBWF  13,W
0099 1D03           00539 BTFSS  03,2
009A 289F           00540 GOTO   09F
009B 1683           00541 BSF    03,5
009C 1086           00542 BCF    06,1
009D 1283           00543 BCF    03,5
009E 1486           00544 BSF    06,1
0000                00545 .................... 	if (test >= 4) READ_BASELINE();			//if one or more toggle then goto setup 
009F 3004           00546 MOVLW  04
00A0 0213           00547 SUBWF  13,W
00A1 1C03           00548 BTFSS  03,0
00A2 28FE           00549 GOTO   0FE
0000                00550 .................... 	else SAMPLING(); 
00FD 2966           00551 GOTO   166
0000                00552 .................... 	return; 
0166 2987           00553 GOTO   187
0000                00554 .................... } 
0000                00555 ....................  
0000                00556 .................... 	 
0000                00557 .................... TIMEOFF()						//check to see if 2 seconds has elapsed	 
0000                00558 .................... {	if (time == 32) return;				//before the vacuum gen will be shut off 
0167 3020           00559 MOVLW  20
0168 0212           00560 SUBWF  12,W
0169 1D03           00561 BTFSS  03,2
016A 296D           00562 GOTO   16D
016B 2979           00563 GOTO   179
0000                00564 .................... 	else 
016C 2979           00565 GOTO   179
0000                00566 .................... 	{	time++; 
016D 0A92           00567 INCF   12,F
0000                00568 .................... 		set_rtcc(1); 
016E 3001           00569 MOVLW  01
016F 0081           00570 MOVWF  01
0000                00571 .................... 		if (time == 32) output_low(vac_generator); 
0170 3020           00572 MOVLW  20
0171 0212           00573 SUBWF  12,W
0172 1D03           00574 BTFSS  03,2
0173 2978           00575 GOTO   178
0174 1683           00576 BSF    03,5
0175 1306           00577 BCF    06,6
0176 1283           00578 BCF    03,5
0177 1306           00579 BCF    06,6
0000                00580 .................... 		return; 
0178 2979           00581 GOTO   179
0000                00582 .................... 	} 
0179 298A           00583 GOTO   18A
0000                00584 .................... } 
0000                00585 ....................  
0000                00586 .................... MAIN() 
0000                00587 .................... {	INITIALIZE(); 
017A 0184           00588 CLRF   04
017B 0183           00589 CLRF   03
017C 3088           00590 MOVLW  88
017D 0084           00591 MOVWF  04
017E 0084           00592 MOVWF  04
017F 3007           00593 MOVLW  07
0180 0080           00594 MOVWF  00
0181 2819           00595 GOTO   019
0000                00596 .................... 	do 
0000                00597 .................... 	{ 
0000                00598 .................... 		if (!input(vac_solonoid)) MODE(); 
0182 1683           00599 BSF    03,5
0183 1406           00600 BSF    06,0
0184 1283           00601 BCF    03,5
0185 1C06           00602 BTFSS  06,0
0186 2867           00603 GOTO   067
0000                00604 .................... 		if (get_rtcc() == 0) TIMEOFF(); 
0187 0801           00605 MOVF   01,W
0188 1903           00606 BTFSC  03,2
0189 2967           00607 GOTO   167
0000                00608 .................... 	} while(true);	 
018A 2982           00609 GOTO   182
0000                00610 .................... } 
018B 0063           0611 SLEEP

SYMBOL TABLE
  LABEL                             VALUE

_RETURN_                          0000000D
BASELINE                          00000011
TIME                              00000012
MODE.TEST                         00000013
MODE.LOGIC                        00000014
SAMPLING.SAMPLE                   00000015
READ_BASELINE.X                   00000015
READ_BASELINE.TEMP                00000016
DELAY_MS.P1                       00000019
DELAY_US.P1                       0000FEEF
DELAY_MS                          00000005
INITIALIZE                        00000019
MODE                              00000067
TIMEOFF                           00000167
MAIN                              0000017A

MEMORY USAGE
