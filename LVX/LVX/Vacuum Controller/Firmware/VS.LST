MPASM

CCS PCW C Compiler, Version 2.548, 4813

               Filename: C:\MICROCH\VACSWTCH\VS.LST

               ROM used: 388 (38%)
                         388 (38%) including unused fragments
               RAM used: 8 (22%) at main() level
                         14 (39%) worst case
               Stack:    2 locations

0000 3000           00001 MOVLW  00
0001 008A           00002 MOVWF  0A
0002 2972           00003 GOTO   172
0003 0000           00004 NOP
0004 0000           00005 NOP
0000                00006 ....................  /*    Vaccuum Switch Controller    							*/ 
0000                00007 .................... /*    Revision 1.0 5/5/98          							*/ 
0000                00008 .................... /*    Revision 1.1 6/3/98       In function 'mode' the led 
0000                00009 .................... /*		will only light when it sees 6 complete transistions not 5  */ 
0000                00010 .................... /*	  Revision 1.2 2/18/99		Made more sensitive for small parts	*/ 
0000                00011 ....................   
0000                00012 ....................  
0000                00013 .................... #include <16C71.H> 
0000                00014 ....................  //////// Standard Header file for the PIC16C71 device //////// 
0000                00015 .................... #device PIC16C71 
0000                00096 .................... #list 
0000                00097 .................... 
0000                00098 ....................  
0000                00099 .................... 			//application specific definitions 
0000                00100 .................... #define min_vac 20 
0000                00101 .................... #define vac_solonoid PIN_B0		//input pc calling for vacuum 
0000                00102 .................... #define vacuum_sense PIN_B1		//output component confirmation to pc 
0000                00103 .................... #define vacuum_sol_drive PIN_B2		//output to turn vac sol on 
0000                00104 .................... #define vac_generator PIN_B6		//output to turn vac gen on 
0000                00105 ....................  
0000                00106 .................... 			//global definitions 
0000                00107 .................... int baseline,time; 
0000                00108 ....................  
0000                00109 ....................  
0000                00110 ....................  
0000                00111 .................... #fuses XT,NOPROTECT,NOWDT 
0000                00112 .................... #use DELAY(clock=4000000) 
0005 3019           00113 MOVLW  19
0006 0084           00114 MOVWF  04
0007 0800           00115 MOVF   00,W
0008 1903           00116 BTFSC  03,2
0009 2818           00117 GOTO   018
000A 3001           00118 MOVLW  01
000B 008D           00119 MOVWF  0D
000C 018C           00120 CLRF   0C
000D 0B8C           00121 DECFSZ 0C,F
000E 280D           00122 GOTO   00D
000F 0B8D           00123 DECFSZ 0D,F
0010 280C           00124 GOTO   00C
0011 3048           00125 MOVLW  48
0012 008C           00126 MOVWF  0C
0013 0B8C           00127 DECFSZ 0C,F
0014 2813           00128 GOTO   013
0015 0000           00129 NOP
0016 0B80           00130 DECFSZ 00,F
0017 280A           00131 GOTO   00A
0018 3400           00132 RETLW  00
0000                00133 .................... #use Standard_IO(A) 
0000                00134 .................... #use Standard_IO(B) 
0000                00135 ....................  
0000                00136 ....................  
0000                00137 .................... void INITIALIZE()			//startup 
0000                00138 .................... { 
0000                00139 .................... 	//set_tris_a(0x0F);		//=b'1111' 
0000                00140 .................... 	//set_tris_b(0xFF);		//=b'11111001' 
0000                00141 .................... 	setup_port_a(RA0_RA1_ANALOG);	//set up a2d 
0019 3088           00142 MOVLW  88
001A 0084           00143 MOVWF  04
001B 3002           00144 MOVLW  02
001C 0080           00145 MOVWF  00
0000                00146 .................... 	setup_adc(ADC_CLOCK_DIV_2); 
001D 0808           00147 MOVF   08,W
001E 3938           00148 ANDLW  38
001F 3801           00149 IORLW  01
0020 0088           00150 MOVWF  08
0000                00151 .................... 	set_adc_channel(0); 
0021 3000           00152 MOVLW  00
0022 008D           00153 MOVWF  0D
0023 0808           00154 MOVF   08,W
0024 39C7           00155 ANDLW  C7
0025 040D           00156 IORWF  0D,W
0026 0088           00157 MOVWF  08
0000                00158 .................... 	baseline = 100; 
0027 3064           00159 MOVLW  64
0028 0091           00160 MOVWF  11
0000                00161 .................... 	time = 32;			//each 16 is one second delay 
0029 3020           00162 MOVLW  20
002A 0092           00163 MOVWF  12
0000                00164 .................... 	output_high(vacuum_sense); 
002B 1683           00165 BSF    03,5
002C 1086           00166 BCF    06,1
002D 1283           00167 BCF    03,5
002E 1486           00168 BSF    06,1
0000                00169 .................... 	delay_ms(400); 
002F 3002           00170 MOVLW  02
0030 0093           00171 MOVWF  13
0031 30C8           00172 MOVLW  C8
0032 0099           00173 MOVWF  19
0033 2005           00174 CALL   005
0034 0B93           00175 DECFSZ 13,F
0035 2831           00176 GOTO   031
0000                00177 .................... 	output_low(vacuum_sense); 
0036 1683           00178 BSF    03,5
0037 1086           00179 BCF    06,1
0038 1283           00180 BCF    03,5
0039 1086           00181 BCF    06,1
0000                00182 .................... 	delay_ms(400); 
003A 3002           00183 MOVLW  02
003B 0093           00184 MOVWF  13
003C 30C8           00185 MOVLW  C8
003D 0099           00186 MOVWF  19
003E 2005           00187 CALL   005
003F 0B93           00188 DECFSZ 13,F
0040 283C           00189 GOTO   03C
0000                00190 .................... 	output_high(vacuum_sense); 
0041 1683           00191 BSF    03,5
0042 1086           00192 BCF    06,1
0043 1283           00193 BCF    03,5
0044 1486           00194 BSF    06,1
0000                00195 .................... 	delay_ms(400); 
0045 3002           00196 MOVLW  02
0046 0093           00197 MOVWF  13
0047 30C8           00198 MOVLW  C8
0048 0099           00199 MOVWF  19
0049 2005           00200 CALL   005
004A 0B93           00201 DECFSZ 13,F
004B 2847           00202 GOTO   047
0000                00203 .................... 	output_low(vacuum_sense); 
004C 1683           00204 BSF    03,5
004D 1086           00205 BCF    06,1
004E 1283           00206 BCF    03,5
004F 1086           00207 BCF    06,1
0000                00208 .................... 	delay_ms(400); 
0050 3002           00209 MOVLW  02
0051 0093           00210 MOVWF  13
0052 30C8           00211 MOVLW  C8
0053 0099           00212 MOVWF  19
0054 2005           00213 CALL   005
0055 0B93           00214 DECFSZ 13,F
0056 2852           00215 GOTO   052
0000                00216 .................... 	output_high(vacuum_sense); 
0057 1683           00217 BSF    03,5
0058 1086           00218 BCF    06,1
0059 1283           00219 BCF    03,5
005A 1486           00220 BSF    06,1
0000                00221 .................... 	delay_ms(400); 
005B 3002           00222 MOVLW  02
005C 0093           00223 MOVWF  13
005D 30C8           00224 MOVLW  C8
005E 0099           00225 MOVWF  19
005F 2005           00226 CALL   005
0060 0B93           00227 DECFSZ 13,F
0061 285D           00228 GOTO   05D
0000                00229 .................... 	output_low(vacuum_sense); 
0062 1683           00230 BSF    03,5
0063 1086           00231 BCF    06,1
0064 1283           00232 BCF    03,5
0065 1086           00233 BCF    06,1
0066 297A           00234 GOTO   17A
0000                00235 .................... } 
0000                00236 ....................  
0000                00237 ....................  
0000                00238 .................... void SAMPLING() 
0000                00239 .................... {	int sample; 
0000                00240 ....................  
0000                00241 .................... 	output_high(vac_generator); 
00F6 1683           00242 BSF    03,5
00F7 1306           00243 BCF    06,6
00F8 1283           00244 BCF    03,5
00F9 1706           00245 BSF    06,6
0000                00246 .................... 	do 
0000                00247 .................... 	{	delay_us(400);				//400sets sample rate at 2500Hz 
00FA 3085           00248 MOVLW  85
00FB 008C           00249 MOVWF  0C
00FC 0B8C           00250 DECFSZ 0C,F
00FD 28FC           00251 GOTO   0FC
0000                00252 .................... 		sample = read_adc()/2;			//takes average of two samples 
00FE 1508           00253 BSF    08,2
00FF 1908           00254 BTFSC  08,2
0100 28FF           00255 GOTO   0FF
0101 0809           00256 MOVF   09,W
0102 0095           00257 MOVWF  15
0103 1003           00258 BCF    03,0
0104 0C95           00259 RRF    15,F
0000                00260 .................... 		delay_us(400); 
0105 3085           00261 MOVLW  85
0106 008C           00262 MOVWF  0C
0107 0B8C           00263 DECFSZ 0C,F
0108 2907           00264 GOTO   107
0000                00265 .................... 		sample = sample + read_adc()/2; 
0109 1508           00266 BSF    08,2
010A 1908           00267 BTFSC  08,2
010B 290A           00268 GOTO   10A
010C 0809           00269 MOVF   09,W
010D 008C           00270 MOVWF  0C
010E 1003           00271 BCF    03,0
010F 0C8C           00272 RRF    0C,F
0110 080C           00273 MOVF   0C,W
0111 0795           00274 ADDWF  15,F
0000                00275 .................... 		if (sample < baseline) output_low(vacuum_sense); 
0112 0811           00276 MOVF   11,W
0113 0215           00277 SUBWF  15,W
0114 1803           00278 BTFSC  03,0
0115 291B           00279 GOTO   11B
0116 1683           00280 BSF    03,5
0117 1086           00281 BCF    06,1
0118 1283           00282 BCF    03,5
0119 1086           00283 BCF    06,1
0000                00284 .................... 		else output_high(vacuum_sense); 
011A 291F           00285 GOTO   11F
011B 1683           00286 BSF    03,5
011C 1086           00287 BCF    06,1
011D 1283           00288 BCF    03,5
011E 1486           00289 BSF    06,1
0000                00290 .................... 	} while (!input(vac_solonoid));			//is solinoid on? 
011F 1683           00291 BSF    03,5
0120 1406           00292 BSF    06,0
0121 1283           00293 BCF    03,5
0122 1C06           00294 BTFSS  06,0
0123 28FA           00295 GOTO   0FA
0000                00296 .................... 	if (sample > baseline)  
0124 0815           00297 MOVF   15,W
0125 0211           00298 SUBWF  11,W
0126 1803           00299 BTFSC  03,0
0127 2948           00300 GOTO   148
0000                00301 .................... 	{	 
0000                00302 ....................  		do 
0000                00303 .................... 		{delay_us(400);				//sets sample rate at 2500Hz 
0128 3085           00304 MOVLW  85
0129 008C           00305 MOVWF  0C
012A 0B8C           00306 DECFSZ 0C,F
012B 292A           00307 GOTO   12A
0000                00308 .................... 		sample = read_adc()/2;			//takes average of two samples 
012C 1508           00309 BSF    08,2
012D 1908           00310 BTFSC  08,2
012E 292D           00311 GOTO   12D
012F 0809           00312 MOVF   09,W
0130 0095           00313 MOVWF  15
0131 1003           00314 BCF    03,0
0132 0C95           00315 RRF    15,F
0000                00316 .................... 		delay_us(400); 
0133 3085           00317 MOVLW  85
0134 008C           00318 MOVWF  0C
0135 0B8C           00319 DECFSZ 0C,F
0136 2935           00320 GOTO   135
0000                00321 .................... 		sample = sample + read_adc()/2; 
0137 1508           00322 BSF    08,2
0138 1908           00323 BTFSC  08,2
0139 2938           00324 GOTO   138
013A 0809           00325 MOVF   09,W
013B 008C           00326 MOVWF  0C
013C 1003           00327 BCF    03,0
013D 0C8C           00328 RRF    0C,F
013E 080C           00329 MOVF   0C,W
013F 0795           00330 ADDWF  15,F
0000                00331 .................... 		} while (sample > min_vac);		//is vacuum low? 
0140 3015           00332 MOVLW  15
0141 0215           00333 SUBWF  15,W
0142 1803           00334 BTFSC  03,0
0143 2928           00335 GOTO   128
0000                00336 ....................  		output_low(vacuum_sense); 
0144 1683           00337 BSF    03,5
0145 1086           00338 BCF    06,1
0146 1283           00339 BCF    03,5
0147 1086           00340 BCF    06,1
0000                00341 .................... 	} 
0000                00342 .................... 	setup_counters(rtcc_internal,rtcc_div_256);	//sets up 2 second delay for generator 
0148 3007           00343 MOVLW  07
0149 008C           00344 MOVWF  0C
014A 1D8C           00345 BTFSS  0C,3
014B 2954           00346 GOTO   154
014C 3007           00347 MOVLW  07
014D 0181           00348 CLRF   01
014E 3081           00349 MOVLW  81
014F 0084           00350 MOVWF  04
0150 0800           00351 MOVF   00,W
0151 39C0           00352 ANDLW  C0
0152 380F           00353 IORLW  0F
0153 0080           00354 MOVWF  00
0154 0064           00355 CLRWDT
0155 3081           00356 MOVLW  81
0156 0084           00357 MOVWF  04
0157 0800           00358 MOVF   00,W
0158 39C0           00359 ANDLW  C0
0159 040C           00360 IORWF  0C,W
015A 0080           00361 MOVWF  00
0000                00362 .................... 	set_rtcc(1); 
015B 3001           00363 MOVLW  01
015C 0081           00364 MOVWF  01
0000                00365 .................... 	time = 0; 
015D 0192           00366 CLRF   12
0000                00367 .................... 	return; 
0000                00368 .................... } 
0000                00369 ....................  
0000                00370 ....................  
0000                00371 .................... void READ_BASELINE() 
0000                00372 .................... {	int x; 
0000                00373 .................... 	long temp; 
0000                00374 ....................  
0000                00375 .................... 	output_high(vac_generator); 
00A3 1683           00376 BSF    03,5
00A4 1306           00377 BCF    06,6
00A5 1283           00378 BCF    03,5
00A6 1706           00379 BSF    06,6
0000                00380 .................... 	output_high(vacuum_sol_drive); 
00A7 1683           00381 BSF    03,5
00A8 1106           00382 BCF    06,2
00A9 1283           00383 BCF    03,5
00AA 1506           00384 BSF    06,2
0000                00385 .................... 	delay_ms(400);							//rev 1.2... was 300ms 
00AB 3002           00386 MOVLW  02
00AC 0098           00387 MOVWF  18
00AD 30C8           00388 MOVLW  C8
00AE 0099           00389 MOVWF  19
00AF 2005           00390 CALL   005
00B0 0B98           00391 DECFSZ 18,F
00B1 28AD           00392 GOTO   0AD
0000                00393 .................... 	baseline = 0; 
00B2 0191           00394 CLRF   11
0000                00395 .................... 	temp = 0; 
00B3 0197           00396 CLRF   17
00B4 0196           00397 CLRF   16
0000                00398 .................... 	for (x = 0;x != 8;x++){ 
00B5 0195           00399 CLRF   15
00B6 3008           00400 MOVLW  08
00B7 0215           00401 SUBWF  15,W
00B8 1903           00402 BTFSC  03,2
00B9 28C6           00403 GOTO   0C6
0000                00404 .................... 		delay_ms(2); 
00BA 3002           00405 MOVLW  02
00BB 0099           00406 MOVWF  19
00BC 2005           00407 CALL   005
0000                00408 .................... 		temp = temp + read_adc(); 
00BD 1508           00409 BSF    08,2
00BE 1908           00410 BTFSC  08,2
00BF 28BE           00411 GOTO   0BE
00C0 0809           00412 MOVF   09,W
00C1 0796           00413 ADDWF  16,F
00C2 1803           00414 BTFSC  03,0
00C3 0A97           00415 INCF   17,F
0000                00416 .................... 		} 
00C4 0A95           00417 INCF   15,F
00C5 28B6           00418 GOTO   0B6
0000                00419 .................... 	temp = temp / 8;				//take average of 8 samples 
00C6 0C97           00420 RRF    17,F
00C7 0C96           00421 RRF    16,F
00C8 0C97           00422 RRF    17,F
00C9 0C96           00423 RRF    16,F
00CA 0C97           00424 RRF    17,F
00CB 0C96           00425 RRF    16,F
00CC 301F           00426 MOVLW  1F
00CD 0597           00427 ANDWF  17,F
0000                00428 .................... 	baseline = temp + (211 - temp)/8;		//rev 1.2... baseline1 = baseline0 +.125*(maxvac-baseline0) 
00CE 30D3           00429 MOVLW  D3
00CF 0098           00430 MOVWF  18
00D0 0816           00431 MOVF   16,W
00D1 0298           00432 SUBWF  18,F
00D2 3000           00433 MOVLW  00
00D3 0099           00434 MOVWF  19
00D4 0817           00435 MOVF   17,W
00D5 1C03           00436 BTFSS  03,0
00D6 0399           00437 DECF   19,F
00D7 0299           00438 SUBWF  19,F
00D8 0818           00439 MOVF   18,W
00D9 008C           00440 MOVWF  0C
00DA 0819           00441 MOVF   19,W
00DB 008E           00442 MOVWF  0E
00DC 0C8E           00443 RRF    0E,F
00DD 0C8C           00444 RRF    0C,F
00DE 0C8E           00445 RRF    0E,F
00DF 0C8C           00446 RRF    0C,F
00E0 0C8E           00447 RRF    0E,F
00E1 0C8C           00448 RRF    0C,F
00E2 301F           00449 MOVLW  1F
00E3 058E           00450 ANDWF  0E,F
00E4 080E           00451 MOVF   0E,W
00E5 008F           00452 MOVWF  0F
00E6 080C           00453 MOVF   0C,W
00E7 0716           00454 ADDWF  16,W
00E8 0091           00455 MOVWF  11
0000                00456 .................... 	output_low(vacuum_sense);				//was baseline1 = 4 + baseline0 +.125*(maxvac-baseline0) 
00E9 1683           00457 BSF    03,5
00EA 1086           00458 BCF    06,1
00EB 1283           00459 BCF    03,5
00EC 1086           00460 BCF    06,1
0000                00461 .................... 	output_low(vac_generator); 
00ED 1683           00462 BSF    03,5
00EE 1306           00463 BCF    06,6
00EF 1283           00464 BCF    03,5
00F0 1306           00465 BCF    06,6
0000                00466 .................... 	output_low(vacuum_sol_drive); 
00F1 1683           00467 BSF    03,5
00F2 1106           00468 BCF    06,2
00F3 1283           00469 BCF    03,5
00F4 1106           00470 BCF    06,2
0000                00471 .................... 	return; 
0000                00472 .................... } 
0000                00473 ....................  
0000                00474 ....................  
0000                00475 .................... void MODE()						//setup baseline or normal sample mode? 
0000                00476 .................... {	int test,logic; 
0000                00477 ....................  
0000                00478 .................... 	logic = 1; 
0067 3001           00479 MOVLW  01
0068 0094           00480 MOVWF  14
0000                00481 .................... 	test = 1; 
0069 0093           00482 MOVWF  13
0000                00483 .................... 	setup_counters(rtcc_internal,rtcc_div_8); 
006A 3002           00484 MOVLW  02
006B 008C           00485 MOVWF  0C
006C 1D8C           00486 BTFSS  0C,3
006D 2876           00487 GOTO   076
006E 3007           00488 MOVLW  07
006F 0181           00489 CLRF   01
0070 3081           00490 MOVLW  81
0071 0084           00491 MOVWF  04
0072 0800           00492 MOVF   00,W
0073 39C0           00493 ANDLW  C0
0074 380F           00494 IORLW  0F
0075 0080           00495 MOVWF  00
0076 0064           00496 CLRWDT
0077 3081           00497 MOVLW  81
0078 0084           00498 MOVWF  04
0079 0800           00499 MOVF   00,W
007A 39C0           00500 ANDLW  C0
007B 040C           00501 IORWF  0C,W
007C 0080           00502 MOVWF  00
0000                00503 .................... 	set_rtcc(68); 
007D 3044           00504 MOVLW  44
007E 0081           00505 MOVWF  01
0000                00506 .................... 	do						//test to see 3 changes in state 
0000                00507 .................... 	{	if (input(vac_solonoid) == logic) 
007F 1683           00508 BSF    03,5
0080 1406           00509 BSF    06,0
0081 3000           00510 MOVLW  00
0082 1283           00511 BCF    03,5
0083 1806           00512 BTFSC  06,0
0084 3001           00513 MOVLW  01
0085 0214           00514 SUBWF  14,W
0086 1D03           00515 BTFSS  03,2
0087 2891           00516 GOTO   091
0000                00517 .................... 		{	test = test + 1; 
0088 3001           00518 MOVLW  01
0089 0793           00519 ADDWF  13,F
0000                00520 .................... 			if (logic == 0) logic = 1; 
008A 0894           00521 MOVF   14,F
008B 1D03           00522 BTFSS  03,2
008C 2890           00523 GOTO   090
008D 3001           00524 MOVLW  01
008E 0094           00525 MOVWF  14
0000                00526 .................... 			else logic = 0; 
008F 2891           00527 GOTO   091
0090 0194           00528 CLRF   14
0000                00529 .................... 		} 
0000                00530 .................... 	} while (get_rtcc() > 67);			//check mode for 1.5ms 
0091 0801           00531 MOVF   01,W
0092 008C           00532 MOVWF  0C
0093 3044           00533 MOVLW  44
0094 020C           00534 SUBWF  0C,W
0095 1803           00535 BTFSC  03,0
0096 287F           00536 GOTO   07F
0000                00537 .................... 	if (test == 6) output_high(vacuum_sense); 
0097 3006           00538 MOVLW  06
0098 0213           00539 SUBWF  13,W
0099 1D03           00540 BTFSS  03,2
009A 289F           00541 GOTO   09F
009B 1683           00542 BSF    03,5
009C 1086           00543 BCF    06,1
009D 1283           00544 BCF    03,5
009E 1486           00545 BSF    06,1
0000                00546 .................... 	if (test >= 4) READ_BASELINE();			//if one or more toggle then goto setup 
009F 3004           00547 MOVLW  04
00A0 0213           00548 SUBWF  13,W
00A1 1C03           00549 BTFSS  03,0
00A2 28F6           00550 GOTO   0F6
0000                00551 .................... 	else SAMPLING(); 
00F5 295E           00552 GOTO   15E
0000                00553 .................... 	return; 
015E 297F           00554 GOTO   17F
0000                00555 .................... } 
0000                00556 ....................  
0000                00557 .................... 	 
0000                00558 .................... TIMEOFF()						//check to see if 2 seconds has elapsed	 
0000                00559 .................... {	if (time == 32) return;				//before the vacuum gen will be shut off 
015F 3020           00560 MOVLW  20
0160 0212           00561 SUBWF  12,W
0161 1D03           00562 BTFSS  03,2
0162 2965           00563 GOTO   165
0163 2971           00564 GOTO   171
0000                00565 .................... 	else 
0164 2971           00566 GOTO   171
0000                00567 .................... 	{	time++; 
0165 0A92           00568 INCF   12,F
0000                00569 .................... 		set_rtcc(1); 
0166 3001           00570 MOVLW  01
0167 0081           00571 MOVWF  01
0000                00572 .................... 		if (time == 32) output_low(vac_generator); 
0168 3020           00573 MOVLW  20
0169 0212           00574 SUBWF  12,W
016A 1D03           00575 BTFSS  03,2
016B 2970           00576 GOTO   170
016C 1683           00577 BSF    03,5
016D 1306           00578 BCF    06,6
016E 1283           00579 BCF    03,5
016F 1306           00580 BCF    06,6
0000                00581 .................... 		return; 
0170 2971           00582 GOTO   171
0000                00583 .................... 	} 
0171 2982           00584 GOTO   182
0000                00585 .................... } 
0000                00586 ....................  
0000                00587 .................... MAIN() 
0000                00588 .................... {	INITIALIZE(); 
0172 0184           00589 CLRF   04
0173 0183           00590 CLRF   03
0174 3088           00591 MOVLW  88
0175 0084           00592 MOVWF  04
0176 0084           00593 MOVWF  04
0177 3007           00594 MOVLW  07
0178 0080           00595 MOVWF  00
0179 2819           00596 GOTO   019
0000                00597 .................... 	do 
0000                00598 .................... 	{ 
0000                00599 .................... 		if (!input(vac_solonoid)) MODE(); 
017A 1683           00600 BSF    03,5
017B 1406           00601 BSF    06,0
017C 1283           00602 BCF    03,5
017D 1C06           00603 BTFSS  06,0
017E 2867           00604 GOTO   067
0000                00605 .................... 		if (get_rtcc() == 0) TIMEOFF(); 
017F 0801           00606 MOVF   01,W
0180 1903           00607 BTFSC  03,2
0181 295F           00608 GOTO   15F
0000                00609 .................... 	} while(true);	 
0182 297A           00610 GOTO   17A
0000                00611 .................... } 
0183 0063           0612 SLEEP

SYMBOL TABLE
  LABEL                             VALUE

_RETURN_                          0000000D
BASELINE                          00000011
TIME                              00000012
MODE.TEST                         00000013
MODE.LOGIC                        00000014
SAMPLING.SAMPLE                   00000015
READ_BASELINE.X                   00000015
READ_BASELINE.TEMP                00000016
DELAY_MS.P1                       00000019
DELAY_US.P1                       0000FEEF
DELAY_MS                          00000005
INITIALIZE                        00000019
MODE                              00000067
TIMEOFF                           0000015F
MAIN                              00000172

MEMORY USAGE
